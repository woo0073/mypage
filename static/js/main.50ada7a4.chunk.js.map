{"version":3,"sources":["logo.svg","components/jihye.png","serviceWorker.js","components/myImage.jsx","components/myCard.jsx","components/myContainers.jsx","components/main_page.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","MyImage","state","imgURL","styles","marginLeft","Figure","Image","width","height","src","my_image","roundedCircle","Caption","style","fontWeight","Component","MyCard","name","props","link","text","marginTop","title_styles","Card","this","Body","Title","Text","Link","href","variant","MyContainers","links","map","element","MainPage","marginBottom","Container","Row","Col","xs","lg","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,4KCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+DCESC,E,4MAfbC,MAAQ,CAAEC,OAAQ,e,EAClBC,OAAS,CAAEC,WAAY,Q,uDAErB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,MAAR,CAAcC,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,IAAUC,eAAa,IACnE,kBAACN,EAAA,EAAOO,QAAR,KACE,uBAAGC,MAAO,CAAEC,WAAY,SAAxB,kCADF,8E,GAPcC,a,QC6BPC,E,4MA7Bbf,MAAQ,CACNgB,KAAM,EAAKC,MAAMD,KACjBE,KAAM,EAAKD,MAAMC,KACjBjB,OAAQ,EAAKgB,MAAMhB,OACnBkB,KAAM,EAAKF,MAAME,M,EAGnBjB,OAAS,CACPI,MAAO,QACPc,UAAW,Q,EAEbC,aAAe,CAAER,WAAY,Q,uDAG3B,OACE,kBAACS,EAAA,EAAD,CAAMV,MAAOW,KAAKrB,QAEhB,kBAACoB,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYb,MAAOW,KAAKF,cAAeE,KAAKvB,MAAMgB,MAClD,kBAACM,EAAA,EAAKI,KAAN,KAAYH,KAAKN,MAAME,MACvB,kBAACG,EAAA,EAAKK,KAAN,CAAWC,KAAML,KAAKvB,MAAMkB,KAAMW,QAAQ,WAA1C,uB,GArBWf,aCgDNgB,E,4MA/Cb9B,MAAQ,CACN+B,MAAO,CACL,CACEf,KAAM,eACNE,KAAM,oCACNjB,OAAQ,GACRkB,KAAM,4EAER,CACEH,KAAM,qBACNE,KAAM,yCACNjB,OAAQ,sBACRkB,KACE,wGAEJ,CACEH,KAAM,yCACNE,KAAM,GACNjB,OAAQ,GACRkB,KACE,iYAEJ,CACEH,KAAM,yCACNE,KAAM,gEACNjB,OAAQ,GACRkB,KACE,sZ,uDAKN,OACE,6BACGI,KAAKvB,MAAM+B,MAAMC,KAAI,SAACC,GAAD,OACpB,kBAAC,EAAD,CACEf,KAAMe,EAAQf,KACdF,KAAMiB,EAAQjB,KACdf,OAAQgC,EAAQhC,OAChBkB,KAAMc,EAAQd,e,GAxCCL,a,wBCqBZoB,E,4MAlBblC,MAAQ,G,EACRE,OAAS,CAAEkB,UAAW,QAASe,aAAc,S,uDAE3C,OACE,kBAACC,EAAA,EAAD,CAAWxB,MAAOW,KAAKrB,QACrB,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,KACT,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,IAAE,EAACC,IAAI,GACV,kBAAC,EAAD,a,GAXW1B,aCEvB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SLwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.50ada7a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/jihye.131b2753.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport my_image from \"./jihye.png\";\r\nimport { Figure } from \"react-bootstrap\";\r\n\r\nclass MyImage extends Component {\r\n  state = { imgURL: \"./jihye.png\" };\r\n  styles = { marginLeft: \"10px\" };\r\n  render() {\r\n    return (\r\n      <Figure>\r\n        <Figure.Image width={171} height={180} src={my_image} roundedCircle />\r\n        <Figure.Caption>\r\n          <p style={{ fontWeight: \"bold\" }}>우지혜 (Jihye Woo)</p>계속 성장하고\r\n          싶은 개발자\r\n        </Figure.Caption>\r\n      </Figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyImage;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nclass MyCard extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n    link: this.props.link,\r\n    imgURL: this.props.imgURL,\r\n    text: this.props.text,\r\n  };\r\n\r\n  styles = {\r\n    width: \"50rem\",\r\n    marginTop: \"30px\",\r\n  };\r\n  title_styles = { fontWeight: \"bold\" };\r\n\r\n  render() {\r\n    return (\r\n      <Card style={this.styles}>\r\n        {/* <Card.Img variant=\"top\" src={imgRender} /> */}\r\n        <Card.Body>\r\n          <Card.Title style={this.title_styles}>{this.state.name}</Card.Title>\r\n          <Card.Text>{this.props.text}</Card.Text>\r\n          <Card.Link href={this.state.link} variant=\"primary\">\r\n            Go for watch!\r\n          </Card.Link>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyCard;\r\n","import React, { Component } from \"react\";\r\nimport MyCard from \"./myCard\";\r\n\r\nclass MyContainers extends Component {\r\n  state = {\r\n    links: [\r\n      {\r\n        name: \"LevelBuilder\",\r\n        link: \"https://github.com/woo0073/CSE416\",\r\n        imgURL: \"\",\r\n        text: \"웹 버전 게임 맵 에디터 (Spring Boot)\",\r\n      },\r\n      {\r\n        name: \"해커톤\",\r\n        link: \"https://devpost.com/woo0073/challenges\",\r\n        imgURL: \"./img/sbuHack19.jpg\",\r\n        text:\r\n          \"Stony Brook AR navigation - Android App ( Big Bang Hacks Award, MLH Google Cloud Award 수상)\",\r\n      },\r\n      {\r\n        name: \"논문 작업_한국\",\r\n        link: \"\",\r\n        imgURL: \"\",\r\n        text:\r\n          \" 한국 정보보호학회18 에서 논문 '사용자의 공인인증서에 관한 인식과 브라우저 선택에 미치는 영향 연구'에 참여하여 국가보안기술연구소 소장상 수상\",\r\n      },\r\n      {\r\n        name: \"논문 작업_영문\",\r\n        link: \"https://link.springer.com/chapter/10.1007/978-3-030-54455-3_1\",\r\n        imgURL: \"\",\r\n        text:\r\n          \"논문 '사용자의 공인인증서에 관한 인식과 브라우저 선택에 미치는 영향 연구'을 더 추가적으로 연구하여 논문 'Tale of Two Browsers: Understanding Users’ Web Browser Choices in South Korea'이 AisaUSEC20에 게재\",\r\n      },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.links.map((element) => (\r\n          <MyCard\r\n            link={element.link}\r\n            name={element.name}\r\n            imgURL={element.imgURL}\r\n            text={element.text}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyContainers;\r\n","import React, { Component } from \"react\";\r\nimport MyImage from \"./myImage\";\r\nimport MyContainers from \"./myContainers\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass MainPage extends Component {\r\n  state = {};\r\n  styles = { marginTop: \"100px\", marginBottom: \"100px\" };\r\n  render() {\r\n    return (\r\n      <Container style={this.styles}>\r\n        <Row>\r\n          <Col xs lg=\"3\">\r\n            <MyImage />\r\n          </Col>\r\n          <Col xs lg={true}>\r\n            <MyContainers />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport MainPage from \"./components/main_page\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainPage />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}